<Window x:Class="ISE182_PROJECT_G8.presentationLayer.chat_window"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             Title="Group 8 Chat"  
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ISE182_PROJECT_G8.presentationLayer"
             xmlns:w="clr-namespace:System.Windows.Workarounds"
             mc:Ignorable="d" Height="600" Width="1070.8" Icon="Images/chat_icon.ico">
    <Window.Resources>
        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle2" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="EditImage" ImageSource="Images/edit.jpg"></ImageBrush>
        <ImageBrush x:Key="DisEditImage" ImageSource="Images/edit_disabled.jpeg"></ImageBrush>
        <ImageBrush x:Key="CancelEditImage" ImageSource="Images/cancel_edit.jpg"></ImageBrush>
        <Style x:Key="MyEditButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource EditImage}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditImage}" Value="Images/edit_disabled.jpeg">
                    <Setter Property="Background" Value="{StaticResource DisEditImage}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding EditImage}" Value="Images/cancel_edit.jpg">
                    <Setter Property="Background" Value="{StaticResource CancelEditImage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="Images/chat_background.jpg"></ImageBrush>
    </Window.Background>
    <Grid Margin="-96,-3,123.2,-0.6" RenderTransformOrigin="0.044,0.08" Height="0" VerticalAlignment="Top" ScrollViewer.CanContentScroll="True">

        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform Angle="0.156"/>
                <TranslateTransform X="0.981" Y="-1.797"/>
            </TransformGroup>
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="0*"/>
        </Grid.RowDefinitions>



        <ListBox  ItemsSource="{Binding Messages}" SelectionChanged="ListBox_SelectionChanged"  w:ListBox.AutoScroll="True" ScrollViewer.CanContentScroll="True" Margin="464,4,-106,-441" RenderTransformOrigin="10.453,0.719" HorizontalAlignment="Left" Width="674" Grid.RowSpan="2">
            <ListBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleY="-0.1"/>
                    <RotateTransform/>
                    <TranslateTransform Y="7.767"/>
                </TransformGroup>
            </ListBox.RenderTransform>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding}" />

                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>

        <TextBox MaxLength="100" FontFamily="Century Gothic" HorizontalContentAlignment="Left" FontSize="16" Background="#7FD6E7FF" Padding="6,3,0,0" Width="507"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="467,480,0,-547" Height="67" Grid.RowSpan="2" KeyDown="TextBox_KeyDown" TextWrapping="Wrap" BorderBrush="#66ABADB3">
            <TextBox.Text>
                <Binding Path="Message" UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>
        <TextBlock FontSize="25" TextAlignment="Left" IsHitTestVisible="False" Text=" Type your message here..." VerticalAlignment="Center" HorizontalAlignment="Left" Margin="467,480,0,-527" Foreground="DarkGray" Height="47" Width="353" Grid.RowSpan="2">
            <TextBlock.Style>

                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Message}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>


                </Style>
            </TextBlock.Style>
        </TextBlock>
        
        <Button Click="Send_Button_Click" Name="send_button" Style="{StaticResource MyButtonStyle2}" Margin="989,470,-107.2,-521" Grid.Row="4" >
            <Button.Background>
                <ImageBrush ImageSource="Images/send_btn.jpg"/>
            </Button.Background>
        </Button>
        <Button Click="Logout_Button_Click" Name="logout_button" Style="{StaticResource MyButtonStyle2}" Margin="100,535,851.8,-563" Grid.Row="4" >
            <Button.Background>
                <ImageBrush ImageSource="Images/logout_btn.jpg"/>
            </Button.Background>
        </Button>

        <Button Click="Edit_Button_Click" Name="edit_button" Style="{StaticResource MyEditButton}" Margin="1023,532,-71.2,-560" Grid.Row="4" >
            
        </Button>



        <TextBlock FontSize="40" HorizontalAlignment="Left" Margin="133,31,0,-94" Grid.RowSpan="2" TextWrapping="Wrap" VerticalAlignment="Top" Height="63" Width="275" Text="Sort by"/>
        <RadioButton Content="Time stamp" IsChecked="{Binding ByTime}" GroupName="sortby" FontSize="14" HorizontalAlignment="Left" Height="17" Margin="133,99,0,-116" Grid.RowSpan="2" VerticalAlignment="Top" Checked="Sorter"/>
        <RadioButton Content="Nickname"  GroupName="sortby"  IsChecked="{Binding ByName}" HorizontalAlignment="Left" Height="15" Margin="133,121,0,-136" Grid.RowSpan="2" VerticalAlignment="Top" Checked="Sorter"/>
        <RadioButton Content="GroupID, Nickname ,Time stamp"  GroupName="sortby" IsChecked="{Binding ByAll}" HorizontalAlignment="Left" Height="17" Margin="133,141,0,-158" Grid.RowSpan="2" VerticalAlignment="Top" Checked="Sorter"/>
        <TextBlock HorizontalAlignment="Left" FontSize="40" Margin="133,190,0,-243" Grid.RowSpan="2" TextWrapping="Wrap" Text="Sort order" VerticalAlignment="Top" Height="53" Width="193"/>
        <RadioButton Content="Ascending" IsChecked="{Binding AscType}" GroupName="sortorder" HorizontalAlignment="Left" Height="15" Margin="139,243,0,-258" Grid.RowSpan="2" VerticalAlignment="Top" Checked="Sorter"/>
        <RadioButton Content="Descending" GroupName="sortorder" IsChecked="{Binding DscType}" HorizontalAlignment="Left" Height="17" Margin="139,263,0,-280" Grid.RowSpan="2" VerticalAlignment="Top" Checked="Sorter"/>
        <TextBlock HorizontalAlignment="Left" FontSize="40" Margin="133,308,0,-395" Grid.RowSpan="2" TextWrapping="Wrap" Text="Filter by" VerticalAlignment="Top" Height="87" Width="151"/>
        <TextBox PreviewTextInput="NumberValidationTextBox"  HorizontalAlignment="Left" Height="16" Margin="230,367,0,-383" Grid.RowSpan="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" TextChanged="Filter" IsEnabledChanged="TextBox_IsEnabledChanged_1">
            <TextBox.Text>
                <Binding Path="GroupID" UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=GidEnable}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                            <!--<Setter Property="Text"-->
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Text" Value=""/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBlock HorizontalAlignment="Left" Margin="139,366,0,-390" Grid.RowSpan="2" TextWrapping="Wrap" Text="GroupID:" VerticalAlignment="Top" Height="24"/>
        <CheckBox IsChecked="{Binding GidEnable}" Height="16" Margin="205,367,805.8,-383" Grid.RowSpan="2" VerticalAlignment="Top"/>
        <CheckBox Content="" IsChecked="{Binding NicknameEnable}" HorizontalAlignment="Left" Height="23" Margin="205,395,0,-418" Grid.RowSpan="2" VerticalAlignment="Top" IsEnabledChanged="CheckBox_IsEnabledChanged">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=GidEnable}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=GidEnable}" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                            <Setter Property="IsEnabled" Value="False"/>

                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock HorizontalAlignment="Left" Margin="139,395,0,-411" Grid.RowSpan="2" TextWrapping="Wrap" Text="Nickname:" VerticalAlignment="Top"/>
        <TextBox HorizontalAlignment="Left" Height="16" Margin="230,395,0,-411" Grid.RowSpan="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" TextChanged="Filter" IsEnabledChanged="TextBox_IsEnabledChanged">
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=NicknameEnable}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Text" Value=""/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

    </Grid>
</Window>